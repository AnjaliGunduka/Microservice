package com.example.demo.common.common.service;

import com.example.demo.common.common.Payment;
import com.example.demo.common.common.TransactionRequest;
import com.example.demo.common.common.TransactionResponse;
import com.example.demo.common.common.entity.Order;
import com.example.demo.common.common.repository.OrderRepository;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Lazy;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

@Service
//@RefreshScope
public class OrderService {

	Logger logger = LoggerFactory.getLogger(OrderService.class);
	@Autowired
	private OrderRepository repository;
	@Autowired
	@Lazy
	private RestTemplate template;

	public Order saveOrder(Order request) throws JsonProcessingException {

		return repository.save(request);
	}

	public TransactionResponse saveOrder(TransactionRequest request) {
		// TODO Auto-generated method stub
		String response = "";
		Order order = request.getOrder();
		Payment payment = request.getPayment();
		payment.setOrderId(order.getId());
		payment.setAmount(order.getPrice());
		// rest call
		Payment paymentResponse = template.postForObject("http://localhost:9191/payment/doPayment", payment,
				Payment.class);

		response = paymentResponse.getPaymentStatus().equals("success")
				? "payment processing successful and order placed"
				: "there is a failure in payment api , order added to cart";

		Order save = repository.save(order);
    return new TransactionResponse(save, paymentResponse.getAmount(), paymentResponse.getTransactionId(), response);
	}

	
	
//    @Value("${microservice.payment-service.endpoints.endpoint.uri}")
//    private String ENDPOINT_URL;
//
//    public TransactionResponse saveOrder(TransactionRequest request) throws JsonProcessingException {
//        String response = "";
//        Order order = request.getOrder();
//        Payment payment = request.getPayment();
//        payment.setOrderId(order.getId());
//        payment.setAmount(order.getPrice());
//        //rest call
//        logger.info("Order-Service Request : "+new ObjectMapper().writeValueAsString(request));
//        Payment paymentResponse = template.postForObject(ENDPOINT_URL, payment, Payment.class);
//
//        response = paymentResponse.getPaymentStatus().equals("success") ? "payment processing successful and order placed" : "there is a failure in payment api , order added to cart";
//        logger.info("Order Service getting Response from Payment-Service : "+new ObjectMapper().writeValueAsString(response));
//        repository.save(order);
//        return new TransactionResponse(order, paymentResponse.getAmount(), paymentResponse.getTransactionId(), response);
//    }
}
